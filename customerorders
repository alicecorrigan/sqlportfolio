#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#How many orders were placed in January? 
SELECT count(orderID) 
FROM BIT_DB.jansales
WHERE length (orderid) = 6
AND orderid <> 'Order ID';

#How many of those orders were for an iPhone?
SELECT COUNT(orderid) 
FROM BIT_DB.jansales
WHERE length (orderid) = 6 
AND orderid <> 'Order ID'
AND product = 'iPhone';

#Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum 
FROM BIT_DB.febsales
INNER JOIN customers
ON febsales.orderid = customers.order_id
WHERE length (orderid) = 6
AND orderid <> 'Order ID';

#Which product was the cheapest one sold in January, and what was the price?
SELECT product, price
FROM BIT_DB.jansales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'
ORDER BY price asc
LIMIT 1;

#What is the total revenue for each product sold in January? 
SELECT product, sum(quantity)*price AS revenue 
FROM BIT_DB.jansales 
WHERE length(orderid) = 6 
AND orderid <> 'Order ID' 
GROUP BY product;

#Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, quantity, sum(quantity)*price AS revenue 
FROM BIT_DB.febsales
INNER JOIN customers
ON febsales.orderid = customers.order_id
WHERE location LIKE '548 lincoln st%'
AND length (orderid) = 6
AND orderid <> 'Order ID';

#How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count (distinct customers.acctnum), avg(price*quantity) AS average_amount_spent 
FROM BIT_DB.febsales
INNER JOIN customers
ON febsales.orderid = customers.order_id
WHERE quantity > 2
AND length (orderid) = 6
AND orderid <> 'Order ID'; 
